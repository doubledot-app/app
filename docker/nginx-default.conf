server {
  listen 3000;
  root /usr/share/nginx/html;
  server_name  _;
  server_tokens off;
  charset utf-8;
  index index.html index.htm;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  client_max_body_size 20M;

  location /health {
      default_type application/json;
      add_header Content-Type application/json;
      
      if ($request_method = GET) {
          return 200 '{"status": "OK"}';
      }

      return 405 '{"status": "Method Not Allowed"}';
  }

  location = /favicon.ico { log_not_found off; access_log off; }
  location = /robots.txt  { log_not_found off; access_log off; }

  location ~* \.(js|css)$ {
    index index.html index.htm;
    try_files $uri $uri/ =404;
    include mime.types;
    default_type application/octet-stream;

    gzip_static on;
    gzip on;
    gzip_vary on;
    gzip_min_length 0;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "MSIE [1-6]\.";
  }
  
  location / {
    index index.html index.htm;
    try_files $uri $uri/ /index.html =404;
    include mime.types;
    default_type application/octet-stream;

    gzip_static on;
    gzip on;
    gzip_vary on;
    gzip_min_length 0;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "MSIE [1-6]\.";

    #gzip on;
    #gzip_vary on;
    #gzip_proxied expired no-cache no-store private auth;
    #gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/javascript application/atom+xml;
  }

  location /nginx_status {
    stub_status;
    access_log off;
    allow 127.0.0.1;
    allow 10.0.0.0/8;
    allow 172.16.0.0/12;
    allow 192.168.0.0/16;
    deny all;
  }

  # location ~ /assets/fonts/ {
  #   root /usr/share/nginx/html/assets/fonts/;
  # }

  location ~ /\. {
    deny all;
  }

  location index.html {
    add_header Last-Modified $date_gmt;
    add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    if_modified_since off;
    expires off;
    etag off;
  }

  # location sw.js {
  #   add_header Last-Modified $date_gmt;
  #   add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
  #   if_modified_since off;
  #   expires off;
  #   etag off;
  # }

  location ~* \.(?:ico|gif|jpg|jpeg|png|woff|woff2|ttf)$ {
    if_modified_since off;
    gzip_static on;
    expires 365d;
    add_header Pragma public;
    add_header Cache-Control "public";
    access_log off;
  }
}
